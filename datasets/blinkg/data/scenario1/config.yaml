# Configuration for Film Ontology Evaluation
# This config file can be loaded using: Config('configs/film-ontology.yaml')

# Path to the ontology file (relative or absolute)
ontology_file: "/home/carlos/workspace/automap/cases/blinkg/data/scenario1/ontology.ttl"

# RDF Type URI
rdf_type_uri: "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"

# Base IRI for resources
base_iri: "http://example.org/"

# IDs by entity type - used for entity matching and validation
ids_by_type:
  "http://example.org/Person":
    - "Venus"

# Property suffixes for validation
property_suffixes:
  - "id"
  - "firstname"
  - "lastname"
  - "fullname"
  - "sportid"
  - "sportname"
  - "practises"
  - "owes"
  - "lives"
  - "cityid"
  - "cityname"

# DBpedia ontology namespace
namespaces: 
  "ex":
    "http://example.org/"

# Full property URIs for evaluation
predicates_to_evaluate:
  "ex":
  - "id"
  - "firstname"
  - "lastname"
  - "fullname"
  - "sportid"
  - "sportname"
  - "practises"
  - "owes"
  - "lives"
  - "cityid"
  - "cityname"

# SPARQL Queries for ontology navigation
sparql_queries:
  subclass: |
    SELECT ?superClass ?subClass
    WHERE {
        ?subClass rdfs:subClassOf ?superClass .
    }
  
  subproperty: |
    SELECT ?superProperty ?subProperty
    WHERE {
        ?subProperty rdfs:subPropertyOf ?superProperty .
    }
  
  subject_class: |
    SELECT ?class
    WHERE {
        ?s a ?class .
    }
  
  subject_property: |
    SELECT ?property
    WHERE {
        ?s ?property ?o .
    }
  
  subject_property_value: |
    SELECT ?property ?value
    WHERE {
        ?s ?property ?value .
    }
  
